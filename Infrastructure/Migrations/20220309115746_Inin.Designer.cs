// <auto-generated />
using System;
using EskhataDigital;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EskhataDigital.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220309115746_Inin")]
    partial class Inin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ActionAccessControllerAccess", b =>
                {
                    b.Property<Guid>("ActionsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ControllerAccessId")
                        .HasColumnType("char(36)");

                    b.HasKey("ActionsId", "ControllerAccessId");

                    b.HasIndex("ControllerAccessId");

                    b.ToTable("ActionAccessControllerAccess");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.ActionAccess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ActionAccess");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.ControllerAccess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("ControllerAccess");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.ExperienceLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ExperienceLevels");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("InvitationReference")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("InvitationReference");

                    b.HasIndex("UserId");

                    b.HasIndex("Email", "Phone")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.UserAuthenticationData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserAuthenticationDatas");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.UserResume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ResumeFilePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VacancyId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VacancyId");

                    b.ToTable("UserResumes");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Vacancy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Duties")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("LevelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Offers")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("RedactorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("LevelId");

                    b.HasIndex("RedactorId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.VacancyCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ParendVacancyCategoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ParendVacancyCategoryId");

                    b.ToTable("VacancyCategories");
                });

            modelBuilder.Entity("VacancyVacancyCategory", b =>
                {
                    b.Property<Guid>("VacanciesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VacancyCategoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("VacanciesId", "VacancyCategoryId");

                    b.HasIndex("VacancyCategoryId");

                    b.ToTable("VacancyVacancyCategory");
                });

            modelBuilder.Entity("ActionAccessControllerAccess", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.ActionAccess", null)
                        .WithMany()
                        .HasForeignKey("ActionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EskhataDigital.Domain.Entities.ControllerAccess", null)
                        .WithMany()
                        .HasForeignKey("ControllerAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Branch", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.City", "City")
                        .WithMany("Branches")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.ControllerAccess", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.Role", "Role")
                        .WithMany("ControllerAccess")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Role", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.User", "User")
                        .WithOne("Role")
                        .HasForeignKey("EskhataDigital.Domain.Entities.Role", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.User", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.User", null)
                        .WithMany("InvitedUsers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.UserAuthenticationData", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.User", "User")
                        .WithOne("UserAuthenticationData")
                        .HasForeignKey("EskhataDigital.Domain.Entities.UserAuthenticationData", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.UserResume", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.User", "User")
                        .WithMany("ResumesForRespondedVacancy")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EskhataDigital.Domain.Entities.Vacancy", "Vacancy")
                        .WithMany("CandidatesResume")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Vacancy", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.Branch", "Branch")
                        .WithMany("Vacancies")
                        .HasForeignKey("BranchId");

                    b.HasOne("EskhataDigital.Domain.Entities.ExperienceLevel", "Level")
                        .WithMany("Vacancies")
                        .HasForeignKey("LevelId");

                    b.HasOne("EskhataDigital.Domain.Entities.User", "Redactor")
                        .WithMany("CreatedVacancyList")
                        .HasForeignKey("RedactorId");

                    b.Navigation("Branch");

                    b.Navigation("Level");

                    b.Navigation("Redactor");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.VacancyCategory", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.VacancyCategory", "ParendVacancyCategory")
                        .WithMany()
                        .HasForeignKey("ParendVacancyCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParendVacancyCategory");
                });

            modelBuilder.Entity("VacancyVacancyCategory", b =>
                {
                    b.HasOne("EskhataDigital.Domain.Entities.Vacancy", null)
                        .WithMany()
                        .HasForeignKey("VacanciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EskhataDigital.Domain.Entities.VacancyCategory", null)
                        .WithMany()
                        .HasForeignKey("VacancyCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Branch", b =>
                {
                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.City", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.ExperienceLevel", b =>
                {
                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Role", b =>
                {
                    b.Navigation("ControllerAccess");
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.User", b =>
                {
                    b.Navigation("CreatedVacancyList");

                    b.Navigation("InvitedUsers");

                    b.Navigation("ResumesForRespondedVacancy");

                    b.Navigation("Role")
                        .IsRequired();

                    b.Navigation("UserAuthenticationData")
                        .IsRequired();
                });

            modelBuilder.Entity("EskhataDigital.Domain.Entities.Vacancy", b =>
                {
                    b.Navigation("CandidatesResume");
                });
#pragma warning restore 612, 618
        }
    }
}
